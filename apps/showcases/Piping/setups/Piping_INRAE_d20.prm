Domain
{
    domainSize <660, 140, 600>;
    numBlocks <4, 2, 1>; // if periodicInY true, then one needs at least two blocks in y direction
    periodicInY true;
}

Physics
{
    timeSteps 5000000;
    pressureDrivenFlow false; // either the pressure or the outflow velocity can be controlled for the suction
    hydraulicGradient 0.757; // final hydraulic gradient (see Fukumoto et al., 2021), only used if pressureDrivenFlow is true
    outflowVelocity_SI 5.96e-3; // final outflow velocity, only used if pressureDrivenFlow is false
    maxSuctionTimeStep 5000000; // time step in which the final suction is reached, 0 means instantly
    densityFluid_SI 1179; // mixture of 65% glycerol and 35% distilled water
    kinematicViscosityFluid_SI 2.12e-5;
    dx_SI 1.5e-4;
    dt_SI 5e-6;
    gravitationalAcceleration_SI 9.81;
}

Bucket
{
    bucketSizeFraction <0.1, 1.0, 0.56>; // bucket size as a fraction of the domain size
    movingBucket false; // allow bucket to move in z direction
    finalForce_SI 1e-3; // final force applied on bucket in negative z direction at maxSuctionTimeStep, only used if movingBucket is true
}

Particles
{
    inFileName spheres_out.dat;
    densityParticle_SI 2650; // silicate glass
    frictionCoefficient 0.6;
    restitutionCoefficient 0.97;
    numSubCycles 1; // due to the limited particle movement, the number of sub cycles is set low
    numSubBlocks <11, 2, 20>; // numerical parameter for the particle mapping
    useLubricationCorrection false;
    poissonsRatio 0.22;
    observationDomainFraction <0.2, 1.0, 0.22>; // uplift/subsidence observation domain size as a fraction of the domain size
    numPreSteps 20000; // number of time steps in the beginning without fluid to let the particles settle again to the bucket wall
    movingParticles true;
}

Output
{
    vtkSpacing 10000;
    vtkFolder vtk_piping;
    fluidSlice true;
    resolutionSpacing 2;
    performanceLogFrequency 10000;
    upliftSubsidenceFrequency 10000;
}

StabilityChecker
{
   checkFrequency 10000;
   streamOutput   false;
   vtkOutput      true;
}
